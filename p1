# 프로젝트 1 얼굴부분에 가우시안 블러링 사용

import dlib
import cv2
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

faceDetector = dlib.get_frontal_face_detector()
landmarkDetector = dlib.shape_predictor("shape_predictor_68_face_landmarks.dat")

img = cv2.imread('twice.jpg')  

# Detect faces in the image
faceRects = faceDetector(img, 1)
print("image :", img.shape, "    {} faces detected: ".format(len(faceRects)))

faceDetector = dlib.get_frontal_face_detector()
landmarkDetector = dlib.shape_predictor('shape_predictor_68_face_landmarks.dat')

img = cv2.imread('twice.jpg')  # input image = img

faceRects = faceDetector(img, 1)    #faceRects = 이미지 얼굴 개수

img_copy = img.copy()                       #이미지 복사
img_drx = img.copy()
for i in range(0, len(faceRects)):   # 얼굴개수가 2개
    x1 = faceRects[i].left()
    y1 = faceRects[i].top()
    x2 = faceRects[i].right()
    y2 = faceRects[i].bottom()
    
    img_original = img_copy[y1:y2+1, x1:x2+1]

    img_originalblur = cv2.GaussianBlur(img_original, (0, 0), 3)  # 가우시안블러링 사용
    plt.figure(figsize=(7,4))             # 이미지크기를 7,4 크기로 설정
    plt.subplot(121); plt.imshow(img_original[:,:,::-1])    # 원본이미지 출력
    plt.subplot(122); plt.imshow(img_originalblur[:,:,::-1])   # 가우시안블러링된 이미지 출력

    img_copy[y1:y2+1, x1:x2+1] = img_originalblur     
    cv2.rectangle(img_drx, (x1, y1), (x2, y2), (0, 0, 255), 1)   # 얼굴 주변에 사각형 그리기


    
plt.figure(figsize=(10,10))      
plt.subplot(211); plt.imshow(img_drx[:,:,::-1]); plt.title('img_original')
plt.subplot(212); plt.imshow(img_copy[:,:,::-1]); plt.title('img_originalblur')
